{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Type\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"option\", null, \"Income\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", null, \"Outcome\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_2, _hoisted_3];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Comments\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"\"\n}, \"Value\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$props.formInput.typeOfIncome = $event)\n  }, _hoisted_4, 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.$props.formInput.typeOfIncome]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"My salary\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.$props.formInput.comment = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.$props.formInput.comment]]), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    placeholder: \"0\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.$props.formInput.value = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.$props.formInput.value]]), _createElementVNode(\"button\", {\n    class: \"btn-submit\",\n    type: \"submit\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.NewType && $options.NewType(...args))\n  }, \"Submit\")], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"mappings":";gCAEIA,oBAA0B;EAAnBC,GAAG,EAAC;AAAE,GAAC,MAAI;gCAEhBD,oBAAuB,gBAAf,QAAM;gCACdA,oBAAwB,gBAAhB,SAAO;oBADfE,UAAuB,EACvBC,UAAwB;gCAE1BH,oBAA8B;EAAvBC,GAAG,EAAC;AAAE,GAAC,UAAQ;gCAOtBD,oBAA2B;EAApBC,GAAG,EAAC;AAAE,GAAC,OAAK;;;uBAbrBG,oBAiBO;IAjBAC,QAAM,2CAAP,QAAe;MACnBC,UAA0B,kBAC1BN,oBAGS;+DAHQO,WAAM,CAACC,SAAS,CAACC,YAAY;yDAA7BF,WAAM,CAACC,SAAS,CAACC,YAAY,KAI9CC,UAA8B,kBAC9BV,oBAIE;IAHAW,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,WAAW;+DACdL,WAAM,CAACC,SAAS,CAACK,OAAO;iDAAxBN,WAAM,CAACC,SAAS,CAACK,OAAO,KAGnCC,UAA2B,kBAC3Bd,oBAAwE;IAAjEW,IAAI,EAAC,QAAQ;IAACC,WAAW,EAAC,GAAG;+DAAUL,WAAM,CAACC,SAAS,CAACO,KAAK;iDAAtBR,WAAM,CAACC,SAAS,CAACO,KAAK,KAEpEf,oBAAyE;IAAjEgB,KAAK,EAAC,YAAY;IAACL,IAAI,EAAC,QAAQ;IAAEM,OAAK,yCAAEC,6CAAO;KAAE,QAAM","names":["_createElementVNode","for","_hoisted_2","_hoisted_3","_createElementBlock","onSubmit","_hoisted_1","_ctx","formInput","typeOfIncome","_hoisted_5","type","placeholder","comment","_hoisted_6","value","class","onClick","$options"],"sourceRoot":"","sources":["/Users/orestklymko/Desktop/Програмування/pet project/budget-app/bud/src/components/FormInput.vue"],"sourcesContent":["<template>\n  <form @submit.prevent>\n    <label for=\"\">Type</label>\n    <select v-model=\"$props.formInput.typeOfIncome\">\n      <option>Income</option>\n      <option>Outcome</option>\n    </select>\n    <label for=\"\">Comments</label>\n    <input\n      type=\"text\"\n      placeholder=\"My salary\"\n      v-model=\"$props.formInput.comment\"\n    />\n\n    <label for=\"\">Value</label>\n    <input type=\"number\" placeholder=\"0\" v-model=\"$props.formInput.value\" />\n\n    <button class=\"btn-submit\" type=\"submit\" @click=\"NewType\">Submit</button>\n  </form>\n</template>\n\n<script>\nexport default {\n  name: \"FormInput\",\n  props: {\n    formInput: {\n      typeOfIncome: String,\n      comment: String,\n      value: Number,\n    },\n  },\n  data: () => ({}),\n  methods: {\n    NewType({ typeOfIncome, comment, value } = this.formInput) {\n      let newArray = {\n        typeOfIncome,\n        comment,\n        value,\n      };\n      this.$emit(\"addNewType\");\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}