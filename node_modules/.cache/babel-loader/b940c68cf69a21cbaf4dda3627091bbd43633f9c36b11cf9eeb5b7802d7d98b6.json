{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Budget calculator\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Budget list\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_form_input = _resolveComponent(\"form-input\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_form_input, {\n    \"form-input\": _ctx.formInput,\n    comment: _ctx.formInput.comment,\n    value: _ctx.formInput.value,\n    typeOfIncome: _ctx.formInput.typeOfIncome,\n    onAddNewType: $options.addNewType\n  }, null, 8 /* PROPS */, [\"form-input\", \"comment\", \"value\", \"typeOfIncome\", \"onAddNewType\"]), _createElementVNode(\"div\", null, \"Balance: \" + _toDisplayString($options.totalValueAll), 1 /* TEXT */), _createElementVNode(\"div\", null, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.budgetList, (list, index) => {\n    return _openBlock(), _createElementBlock(\"ul\", {\n      key: index\n    }, [_createElementVNode(\"li\", null, [_createElementVNode(\"div\", null, _toDisplayString(list.typeOfIncome), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(list.value), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteItems(index)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAM;gCACfC,oBAA0B,YAAtB,mBAAiB;gCAUnBA,oBAAoB,YAAhB,aAAW;;;;uBAXnBC,oBAoBM,OApBNC,UAoBM,GAnBJC,UAA0B,EAC1BC,aAMEC;IALC,YAAU,EAAEC,cAAS;IACrBC,OAAO,EAAED,cAAS,CAACC,OAAO;IAC1BC,KAAK,EAAEF,cAAS,CAACE,KAAK;IACtBC,YAAY,EAAEH,cAAS,CAACG,YAAY;IACpCC,YAAU,EAAEC;+FAEfX,oBAAuC,aAAlC,WAAS,oBAAGW,sBAAa,kBAC9BX,oBASM,cARJY,UAAoB,qBACpBX,oBAMKY,6BANuBP,eAAU,GAA1BQ,IAAI,EAAEC,KAAK;yBAAvBd,oBAMK;MANoCe,GAAG,EAAED;IAAK,IACjDf,oBAIK,aAHHA,oBAAkC,8BAA1Bc,IAAI,CAACL,YAAY,kBACzBT,oBAA2B,8BAAnBc,IAAI,CAACN,KAAK,kBAClBR,oBAAmD;MAA1CiB,OAAK,YAAEN,oBAAW,CAACI,KAAK;OAAG,QAAM","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_form_input","_ctx","comment","value","typeOfIncome","onAddNewType","$options","_hoisted_3","_Fragment","list","index","key","onClick"],"sourceRoot":"","sources":["/Users/orestklymko/Desktop/Програмування/pet project/budget-app/bud/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <h1>Budget calculator</h1>\n    <form-input\n      :form-input=\"formInput\"\n      :comment=\"formInput.comment\"\n      :value=\"formInput.value\"\n      :typeOfIncome=\"formInput.typeOfIncome\"\n      @addNewType=\"addNewType\"\n    />\n    <div>Balance: {{ totalValueAll }}</div>\n    <div>\n      <h2>Budget list</h2>\n      <ul v-for=\"(list, index) in budgetList\" :key=\"index\">\n        <li>\n          <div>{{ list.typeOfIncome }}</div>\n          <div>{{ list.value }}</div>\n          <button @click=\"deleteItems(index)\">Delete</button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FormInput from \"@/components/FormInput.vue\";\n\nexport default {\n  name: \"App\",\n  components: { FormInput },\n  data: () => ({\n    formInput: {\n      typeOfIncome: \"Income\",\n      comment: \"\",\n      value: 0,\n    },\n    budgetList: [{ typeOfIncome: \"Income\", comment: \"\", value: 12 }],\n    totalValue: 0,\n  }),\n\n  methods: {\n    addNewType(newArray) {\n      this.budgetList.push(newArray);\n      this.formInput.typeOfIncome = \"\";\n      this.formInput.comment = \"\";\n      this.formInput.value = 0;\n    },\n    deleteItems(index) {\n      this.budgetList.splice(index, 1);\n    },\n  },\n\n  computed: {\n    totalValueAll() {\n      return this.budgetList.reduce((acc, item) => item.value + acc, 0);\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}